{"version":3,"sources":["Views/Home/Board.jsx","Views/Home/Home.jsx","Views/Board/Card.jsx","Views/Board/List.jsx","Views/Board/Board.jsx","Router.js","App.js","serviceWorker.js","index.js"],"names":["Board","board","nametable","_tablesid","className","to","Home","boards","setBoards","useState","formVisible","setVisible","newBoard","setBoard","handleSubmit","e","a","preventDefault","currentTarget","reset","data","nameTable","axios","post","headers","token","res","console","log","newBoards","push","map","key","onClick","onSubmit","placeholder","onChange","target","value","type","Card","namecard","card","Lists","list","_listid","cards","setCards","task","setTask","useEffect","get","rows","fetchData","nameCard","listid","_cardid","newCards","namelist","tablesid","lists","setLists","newList","setNewList","tableid","nameList","newLists","List","Router","exact","path","render","props","match","params","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.482b025f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Board.css';\r\n\r\nconst Board = ({board}) =>{\r\n    const {nametable, _tablesid} = board;\r\n    return(\r\n        <div className=\"col-4 mt-2\">\r\n            <Link to={`/board/${_tablesid}`}>\r\n                <div className=\"card card-board py-3\" >\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{nametable}</h5>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React,{useState} from 'react';\r\nimport './Home.css';\r\nimport Board from './Board';\r\nimport axios from 'axios';\r\n\r\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI0IiwiZnVsbG5hbWUiOiJsdWlzIG9zd2FsZG8gcGluZWRhIHJhbmdlbCIsInVzZXJuYW1lIjoiT3NiYW43dTciLCJlbWFpbCI6ImdvcmRpdG9AZ21haWwuY29tIiwiaWF0IjoxNjAxMjM3MDAxLCJleHAiOjE2MDE0OTYyMDF9.jgd-Rt7q5GhS05bV6dC3yoZLVw2_CRViZEmzuRIcGJs\";\r\n\r\nconst Home = ({boards,setBoards}) =>{\r\n    const [formVisible,setVisible] = useState(false);\r\n    const [newBoard, setBoard] = useState('');\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        e.currentTarget.reset();\r\n        \r\n        const data = {\r\n            nameTable:newBoard\r\n            //podemos mandar tambien background\r\n        }\r\n\r\n        const res = await axios.post('/newtable',data,{headers:{token}});\r\n        console.log(res.data);\r\n        const {_tablesid} = res.data;\r\n\r\n        const newBoards = [...boards];\r\n        newBoards.push({\r\n            nametable: newBoard,\r\n            //_personid: \"4\",\r\n            _tablesid\r\n        });\r\n        setBoards(newBoards);\r\n    }\r\n    return(\r\n        <>\r\n        {!boards?<div className=\"lds-dual-ring\"></div>:\r\n        <div className=\"container pt-3\">\r\n            <div className=\"row\">\r\n                {boards.map(board=><Board board={board} key={board._tablesid}/>)}\r\n                <div className=\"col-4 mt-2\">\r\n\r\n                    <div className={`card card-board add-board py-3 ${!formVisible?'':'hidden'}`} onClick={()=>setVisible(true)} >\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title \">+ Agregar Tablero</h5>\r\n                        </div>\r\n                    </div>\r\n                \r\n                    <div className={formVisible?'':'hidden'} >\r\n                        <form className=\"card-container form-add-list\" onSubmit={handleSubmit}>\r\n                            <textarea placeholder=\"Nombre del tablero\" className=\"textarea-card\" onChange={e=>setBoard(e.target.value)}/>\r\n                            <div className=\"btn-group\">\r\n                                <button className=\"btn btn-success btn-card mr-1 py-2\">Agregar Tablero</button>\r\n                                <button type=\"button\" className=\"btn btn-danger ml-1 py-2\" onClick={()=>setVisible(false)}>x</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        </div>}\r\n        </>\r\n    );\r\n};\r\nexport default Home;","import React from 'react';\r\n\r\nconst Card = ({card}) =>{\r\n    const {namecard} = card;\r\n    return(\r\n        <div className=\"card-container\"> \r\n            <span>{namecard}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI0IiwiZnVsbG5hbWUiOiJsdWlzIG9zd2FsZG8gcGluZWRhIHJhbmdlbCIsInVzZXJuYW1lIjoiT3NiYW43dTciLCJlbWFpbCI6ImdvcmRpdG9AZ21haWwuY29tIiwiaWF0IjoxNjAxMjM3MDAxLCJleHAiOjE2MDE0OTYyMDF9.jgd-Rt7q5GhS05bV6dC3yoZLVw2_CRViZEmzuRIcGJs\";\r\n\r\nconst Lists = ({list}) =>{\r\n    const {_listid} = list;\r\n    const [cards,setCards] = useState(null);\r\n    const [formVisible,setVisible] = useState(false);\r\n    const [task, setTask] = useState('');\r\n    useEffect(()=>{\r\n\r\n        const fetchData = async ()=>{\r\n            const res = await axios.get(`/get-cards-user/${_listid}`,{headers:{token}});\r\n            setCards(res.data.rows);\r\n        }\r\n        fetchData();\r\n    },[_listid]);\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const data={\r\n            nameCard:task,\r\n            listid:_listid\r\n        }\r\n        e.currentTarget.reset();\r\n        \r\n        const res = await axios.post('/newCard',data,{headers:{token}});\r\n        const {_cardid} = res.data;\r\n        const newCards = [...cards];\r\n\r\n        newCards.push({\r\n            namecard: task,\r\n            _cardid, \r\n            _listid\r\n        });\r\n\r\n        setCards(newCards);\r\n    }\r\n\r\n\r\n    if(!cards)return<div>no cards</div>\r\n    return(\r\n        <div className=\"list-container\">\r\n            <textarea className=\"title-list\" >{list.namelist}</textarea>\r\n            {cards.map(card=><Card card={card} key={card._cardid}/>)}\r\n            <div className={`card-container add-card ${formVisible?'hidden':''}`} onClick={()=>setVisible(true)}>\r\n                + Agregar tarea\r\n            </div>\r\n            <div className={formVisible?'':'hidden'} >\r\n                <form className=\"card-container form-add-card\" onSubmit={handleSubmit}>\r\n                    <textarea className=\"textarea-card\" onChange={e=>setTask(e.target.value)}/>\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-success btn-card mr-1 py-2\">Agregar tarea</button>\r\n                        <button type=\"button\" className=\"btn btn-danger ml-1 py-2\" onClick={()=>setVisible(false)}>x</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Lists;","import React,{ useEffect,useState }  from 'react';\r\nimport axios from 'axios';\r\nimport List from './List';\r\n\r\nimport './Board.css';\r\n\r\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI0IiwiZnVsbG5hbWUiOiJsdWlzIG9zd2FsZG8gcGluZWRhIHJhbmdlbCIsInVzZXJuYW1lIjoiT3NiYW43dTciLCJlbWFpbCI6ImdvcmRpdG9AZ21haWwuY29tIiwiaWF0IjoxNjAxMjM3MDAxLCJleHAiOjE2MDE0OTYyMDF9.jgd-Rt7q5GhS05bV6dC3yoZLVw2_CRViZEmzuRIcGJs\";\r\n\r\nconst Board = ({tablesid}) =>{\r\n    const [lists, setLists] = useState(null);\r\n    const [formVisible,setVisible] = useState(false);\r\n    const [newList,setNewList] = useState('');\r\n    useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            const res = await axios.get(`/get-lists-user/${tablesid}`,{headers:{token}});\r\n            setLists(res.data.rows);\r\n        }\r\n        fetchData();\r\n    },[tablesid]);\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        e.currentTarget.reset();\r\n\r\n        const data = {\r\n            tableid:tablesid,\r\n            nameList:newList\r\n        }\r\n        const res = await axios.post('/newList',data,{headers:{token}});\r\n\r\n\r\n        const {_listid} = res.data;\r\n        const newLists = [...lists];\r\n        newLists.push({\r\n            namelist: newList ,\r\n            _listid,\r\n            _tablesid: tablesid\r\n        });\r\n\r\n        setLists(newLists);\r\n        setNewList('');\r\n    }\r\n\r\n    if(!lists)return<div>cargando</div>\r\n    return(\r\n        <div className=\"board-container\">\r\n            {lists.map(list=><List list={list} key={list._listid}/>)}\r\n            <div className={`list-container add-list ${formVisible?'hidden':''}`} onClick={()=>setVisible(true)}>\r\n                + Agregar Lista\r\n            </div>\r\n            <div className={formVisible?'':'hidden'} >\r\n                <form className=\"card-container form-add-list\" onSubmit={handleSubmit}>\r\n                    <textarea placeholder=\"Nombre de la lista\" className=\"textarea-card\" onChange={e=>setNewList(e.target.value)}/>\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-success btn-card mr-1 py-2\">Agregar tarea</button>\r\n                        <button type=\"button\" className=\"btn btn-danger ml-1 py-2\" onClick={()=>setVisible(false)}>x</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Board;","import React,{useEffect, useState} from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n//Views\r\nimport Home from './Views/Home/Home';\r\nimport Board from './Views/Board/Board';\r\n\r\nconst Router = () =>{\r\n    const [boards, setBoards] = useState(null);\r\n    const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI0IiwiZnVsbG5hbWUiOiJsdWlzIG9zd2FsZG8gcGluZWRhIHJhbmdlbCIsInVzZXJuYW1lIjoiT3NiYW43dTciLCJlbWFpbCI6ImdvcmRpdG9AZ21haWwuY29tIiwiaWF0IjoxNjAxMjM3MDAxLCJleHAiOjE2MDE0OTYyMDF9.jgd-Rt7q5GhS05bV6dC3yoZLVw2_CRViZEmzuRIcGJs\";\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            const res = await axios.get('/get-tables-user',{headers:{token}});\r\n            setBoards(res.data.rows);\r\n            \r\n        }\r\n        fetchData();\r\n    },[]);\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' render={()=><Home boards={boards} setBoards={setBoards}/>} />\r\n                <Route exact path={`/board/:tablesid`} render={props=>{\r\n                    return(<Board tablesid={props.match.params.tablesid}/>);\r\n                }}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Router;","import React from 'react';\n\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport './App.css';\n\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}